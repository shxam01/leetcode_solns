class Solution {
public:
    vector<vector<int>>ans;
    void helper(vector<int>&candidates,int target,int sum,vector<int>&temp,int idx){
        if(sum==target){
            ans.push_back(temp);
            return;
        }
        if(sum>target || idx==candidates.size()){
            return;
        }
        for(int i=idx;i<candidates.size();i++){
            if(i>idx && candidates[i]==candidates[i-1]) continue;
            sum+=candidates[i];
            temp.push_back(candidates[i]);
            helper(candidates,target,sum,temp,i+1);
            temp.pop_back();
            sum-=candidates[i];
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<int>temp;
        sort(candidates.begin(),candidates.end());
        helper(candidates,target,0,temp,0);
        return ans;
    }
};
